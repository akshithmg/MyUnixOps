---
- name: Execute Change Automation on Target Hosts
  hosts: all
  gather_facts: true

  vars:
    # Default values (can be overridden by AWX survey)
    keyfactor_url: "https://fis.keyfactorpki.com"
    https_proxy: "http://10.56.24.125:10022"
    template: "WebServer(13Month-ClientandServerAuth)PROD"

  tasks:
    - name: Prepare metadata JSON string from dict
      set_fact:
        metadata_json: >-
          {{
            {
              "Email-Contact": email_contact,
              "Device-Type": device_type,
              "DataCenter-Location": datacenter_location,
              "Description": description,
              "Notification": notification,
              "Folder": folder,
              "Sub-Folder": sub_folder,
              "Application-Contact-Primary": app_contact_primary,
              "Application-Contact-Secondary": app_contact_secondary,
              "Permissions": permissions,
              "Contact": contact,
              "ACME_Requester": acme_requester
            } | to_json
          }}

    - name: Copy enrollment script to remote host
      ansible.builtin.copy:
        src: ./scripts/pfx_enroll_download.sh
        dest: /tmp/pfx_enroll_download.sh
        mode: '0700'

    - name: Run enrollment script on remote host
      ansible.builtin.shell: /tmp/pfx_enroll_download.sh
      environment:
        auth: "{{ auth }}"
        change_number: "{{ change_number }}"
        cn_name: "{{ cn_name }}"
        ca_name: "{{ ca_name }}"
        password: "{{ password }}"
        dns_names: "{{ dns_names }}"
        ip_addresses: "{{ ip_addresses }}"
        keyfactor_url: "{{ keyfactor_url }}"
        https_proxy: "{{ https_proxy }}"
        template: "{{ template }}"
        metadata_json: "{{ metadata_json }}"
      register: result
      failed_when: result.rc != 0
      no_log: false

    - name: Print script output on success
      debug:
        msg: "{{ result.stdout_lines }}"
      when: result.rc == 0

    - name: Print script output on failure
      debug:
        msg: "{{ result.stdout_lines }}"
      when: result.rc != 0

    - name: Clean up script after execution (optional)
      ansible.builtin.file:
        path: /tmp/pfx_enroll_download.sh
        state: absent
